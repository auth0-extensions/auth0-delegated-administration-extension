# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

references:
  workspace_root: &workspace_root
    ~/repo

  node_container: &node_container
    docker:
      - image: circleci/node:6.11

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  build_and_test:
    working_directory: *workspace_root
    <<: *node_container

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - yarn-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - yarn-dependencies-

      - run: yarn install --ignore-engines
      - run: yarn test --ignore-engines
      - run: yarn build --ignore-engines
  
      - store_artifacts:
          path: ./dist

      - save_cache:
          name: Save yarn packages to cache
          key: yarn-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - dist/*

  deploy:
    working_directory: *workspace_root
    docker:
      - image: cibuilds/github:0.12
        environment:
          RUBY_VERSION: 2.4.3
          BUNDLE_SILENCE_ROOT_WARNING: true

    steps:
      - *attach_workspace

      - run:
          name: Setup dependencies
          command: apk add --update --no-cache --virtual build-dependencies && \
                   apk add --update --no-cache \
                   ruby
      
      - run:
          name: Simulate Deploy
          command: ls ./dist
      
      - run:
          name: Compress files
          command: tar -zcvf assets.tar.gz dist/

      - run:
          name: Install Chandler
          command: gem install chandler

      # Get version from package.json using jq (comes with cibuilds/base)
      # Create a github release using the CHANGELOG.md that matches the version number as the content
      # Uploads the asset to the release
      - run:
          name: Create Github Release
          command: |
            VERSION=v$(cat dist/webtask.json | jq .version -r)
            chandler push ${VERSION}
            ghr -t ${CHANDLER_GITHUB_API_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} ${VERSION} ./assets.tar.gz

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_test:
          filters:
            branches:
                ignore: master
  build_test_and_deploy:
    jobs:
      - build_and_test:
          filters:
            tags:
              only: /^v.*/
            branches:
                only: master
      - deploy:
          requires:
            - build_and_test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

